version: '3'
services:
  graph-node:
    image: graphprotocol/graph-node:latest
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8020:8020'
      - '8030:8030'
      - '8040:8040'
    depends_on:
      - ipfs
      - postgres
    environment:
      postgres_host: postgres
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: 'ipfs:5001'
      # Change next line if you want to connect to a different JSON-RPC endpoint
      ethereum: 'mainnet:https://polygon-mumbai.g.alchemy.com/v2/$API_KEY'
      GRAPH_LOG: debug
    networks:
      graph-net:
        ipv4_address: 172.15.0.5

  ipfs:
    image: ipfs/go-ipfs:v0.4.23
    ports:
      - '5001:5001'
    volumes:
      - ./data/ipfs:/data/ipfs
    networks:
      graph-net:
        ipv4_address: 172.15.0.6
  postgres:
    image: postgres
    ports:
      - '5432:5432'
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      graph-net:
        ipv4_address: 172.15.0.7

  explorer:
    image: blockscout/blockscout-core:3.7.4-pre-4
    ports:
      - 4000:4000
    environment:
      NETWORK: Test
      SUBNETWORK: Test
      ETHEREUM_JSONRPC_VARIANT: ganache
      ETHEREUM_JSONRPC_HTTP_URL: 'http://172.15.0.1:8545'
      FAUCET_JSONRPC_HTTP_URL: 'http://172.15.0.1:8545'
      ETHEREUM_JSONRPC_WS_URL: 'ws://172.15.0.1:8545'
      DATABASE_URL: 'postgresql://graph-node:let-me-in@postgres:5432/blockscout?sslmode=none'
      SECRET_KEY_BASE: 'VTIB3uHDNbvrY0+60ZWgUoUBKDn9ppLR8MI4CpRz4/qLyEFs54ktJfaNT6Z221No'
      ECTO_USE_SSL: 'false'
      BLOCKSCOUT_PROTOCOL: 'http'
      PORT: 4000
    depends_on:
      - postgres
    networks:
      graph-net:
        ipv4_address: 172.15.0.8

networks:
  graph-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.15.0.0/24
